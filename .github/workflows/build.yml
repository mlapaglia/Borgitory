name: Build and Test

permissions:
  contents: read

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: docker.io
  IMAGE_NAME: mlapaglia/borgitory

jobs:
  build-test-image:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5
      with:
        fetch-depth: 1
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build test image
      uses: docker/build-push-action@v6
      with:
        context: .
        target: test
        load: true
        tags: borgitory-test
        cache-from: type=gha
        cache-to: type=gha,mode=max

  lint:
    runs-on: ubuntu-latest
    needs: build-test-image
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5
      with:
        fetch-depth: 1
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Load test image from cache
      uses: docker/build-push-action@v6
      with:
        context: .
        target: test
        load: true
        tags: borgitory-test
        cache-from: type=gha
    
    - name: Run linting
      run: |
        docker run --rm -v $(pwd):/workspace -w /workspace borgitory-test python lint.py check

  mypy:
    runs-on: ubuntu-latest
    needs: build-test-image
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5
      with:
        fetch-depth: 1
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Load test image from cache
      uses: docker/build-push-action@v6
      with:
        context: .
        target: test
        load: true
        tags: borgitory-test
        cache-from: type=gha
    
    - name: Run type checking
      run: |
        docker run --rm -v $(pwd):/workspace -w /workspace borgitory-test python lint.py mypy

  test:
    runs-on: ubuntu-latest
    needs: build-test-image
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5
      with:
        fetch-depth: 1
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Load test image from cache
      uses: docker/build-push-action@v6
      with:
        context: .
        target: test
        load: true
        tags: borgitory-test
        cache-from: type=gha
    
    - name: Run tests
      run: |
        docker run --rm \
          --cap-add SYS_ADMIN \
          --device /dev/fuse:/dev/fuse:rwm \
          -v $(pwd):/app \
          -w /app \
          borgitory-test \
          sh -c "pip install -e .[dev] && pytest tests/ --cov=src/borgitory --cov-report=xml:coverage.xml --cov-report=html:htmlcov --junitxml=junit.xml -o junit_family=legacy"

    - name: Upload coverage to Codecov
      if: always()
      uses: codecov/codecov-action@v5
      with:
        files: ./coverage.xml
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: false

    - name: Upload test results to Codecov
      if: always()
      uses: codecov/test-results-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

  build-python-production-package:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5
      with:
        fetch-depth: 1
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13.7'
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install build twine
    
    - name: Build package
      run: python -m build
    
    - name: Check package with twine
      run: twine check dist/*
    
    - name: Test package installation
      run: |
        # Create a virtual environment for testing
        python -m venv test_env
        
        # Install the built package
        source test_env/bin/activate
        pip install dist/*.whl
        
        # Test that the CLI works
        borgitory --version
        borgitory --help

  build-docker-production-image:
    runs-on: ubuntu-latest
    needs: [lint, mypy, test]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5
      with:
        fetch-depth: 1
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build production image
      uses: docker/build-push-action@v6
      with:
        context: .
        platforms: linux/amd64
        push: false
        load: true
        tags: borgitory-production
        cache-from: type=gha
        cache-to: type=gha,mode=max
